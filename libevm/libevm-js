#!/usr/bin/env node

// SPDX-License-Identifier: AGPL-3.0-or-later

//    ----------------------------------------------------------------------
//    Copyright Â© 2025  Pellegrino Prevete
//
//    All rights reserved
//    ----------------------------------------------------------------------
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.

const
  _libcrash =
    require(
      '../libcrash-js/crash-js');
_json_parse =
  _libcrash._path_join;
_path_join =
  _libcrash._path_join;
const
  _evm_chains_info_module =
    require(
      '../evm-chains-info/evm-chains-info-js');
_evm_chains_db_path_get =
  _evm_chains_info_module._evm_chains_db_path_get;
_rpc_backend_get =
  _evm_chains_info_module._rpc_backend_get;
_evm_chain_info_get =
  _evm_chains_info_module._evm_chain_info_get;

function
  _contract_abi_get(
    _deployments_dir,
    _contract_name,
    _network_chain_id,
    _version) {
  let
    _file_name,
    _path;
  _file_name =
    _contract_name.concat(
      ".abi.json");
  _path =
    _path_join(
      [_deployments_dir,
       _contract_name,
       _network_chain_id,
       _version,
       _file_name]);
  return _path;
}

function
  _contract_bytecode_get(
    _deployments_dir,
    _contract_name,
    _network_chain_id,
    _version) {
  let
    _file_name,
    _path;
  _file_name =
    _contract_name.concat(
      ".bin");
  _path =
    _path_join(
      [_deployments_dir,
       _contract_name,
       _network_chain_id,
       _version,
       _file_name]);
  return _path;
}

function
  _contract_compiler_output_get(
    _deployments_dir,
    _contract_name,
    _network_chain_id,
    _version) {
  let
    _file_name,
    _path;
  _file_name =
    _contract_name.concat(
      ".json");
  _path =
    _path_join(
      [_deployments_dir,
       _contract_name,
       _network_chain_id,
       _version,
       _file_name]);
  return _path;
}

module.exports = {
  _contract_abi_get:
    _contract_abi_get,
  _contract_bytecode_get:
    _contract_bytecode_get,
  _contract_compiler_output_get:
    _contract_compiler_output_get,
  _evm_chains_db_path_get:
    _evm_chains_db_path_get,
  _evm_chain_info_get:
    _evm_chain_info_get,
  _rpc_backend_get:
    _rpc_backend_get
}
